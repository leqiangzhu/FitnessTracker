@{
    Layout = "_Layout";
}
<h1 class="header-w3ls">
  Set Your Account
</h1>
<!--  -->
<div class="copy">
  <p>&copy;2018 {Bongolia Team} All Rights Reserved | Thanks To <a href="http://www.W3Layouts.com" target="_blank">W3Layouts</a></p>
</div>
<script>
window.demoDescription = "Create a subdivided grid colored with HSL color space. The pointer position updates the hue.";

Pts.quickStart( "#pt", "#fe3" );

//// Demo code starts (anonymous function wrapper is optional) ---

(function() {
  
  // to interpolate color
  var t = 0;
  
  // hsl max value range (360,1,1,1)
  let cu = Color.hsl( Color.maxValues("hsl") );
  
  // recursively subdivide a rectangle
  function subdivide( color, rect, depth, index, center ) {
    if (depth > 5) return;
    let qs = Rectangle.quadrants( rect, center );
    qs.map( (r) => r[1].ceil() ); // fix the floating-point stroke problem
    
    form.fill( color( rect.interpolate( t ) ) ).rects( qs );
    
    if (index < 0) {
      for (let i=0, len=qs.length; i<len; i++) {
        subdivide(color, qs[i], depth+1, i );
      }
    } else {
      let i = Num.boundValue( index+2, 0, 4 );
      subdivide(color, qs[i], depth+1, index );
    }
  }
  
  
  space.add( (time, ftime) => {
    
    t = Num.cycle( time%3000/3000 );
    
    // get HSL color string, given a point position
    let color = (p) => {
      let p1 = p.$divide(space.size);
      let p2 = space.pointer.$divide(space.size);
      let c = cu.$multiply( Pt.make( 4, 1 ).to( p2.x, p2.y/3 + p1.x/3, p1.y ) );
      return Color.HSLtoRGB( c ).toString("rgb");
    }
    
    form.stroke(false);
    subdivide( color, space.innerBound, 0, -1, space.pointer );
    
  });
  
  //// ----
  
  
  space.bindMouse().play();
  
})();
</script>
<div class="form-container" style="display:inline-block">
<form action="/" method="post">
    <label for="new-firstname">First Name:</label><br>
    <input id="new-firstname" name="new-firstname">
    
    <label for="new-lastname">Last Name:</label><br>
    <input id="new-lastname" name="new-lastname" type="text">

    <label for="new-phone-number">Phone Number:</label><br>
    <input id="new-phone-number" name="new-phone-number" type="text">

    <label for="new-email">Email:</label><br>
    <input id="new-email" name="new-email" type="text">

    <label for="new-height">Height:</label><br>
    <input id="new-height" name="new-height" type="text">

    <label for="new-weight">Weight:</label><br>
    <input id="new-weight" name="new-weight" type="text">

    <label for="new-birthday">Birthday:</label><br>
    <input id="new-birthday" name="new-birthday" type="date">

    <label for="new-gender">Gender:</label><br>
    <select>
        <option value="Male">Male</option>
        <option value="Female">Female</option>

    </select>

     <button type="submit" class='btn btn-success' >Comfirm</button>
</form>
</div>