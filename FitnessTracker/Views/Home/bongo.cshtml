@{
    Layout = "_Layout";
}
<h1 class="header-w3ls">
  Set Your Account
</h1>
<div class="art-bothside" style="position: absolute;text-align:center;margin-left: 400px;pointer-events:none;">
  <div class="sap_tabs">
    <div id="horizontalTab">
      <ul class="resp-tabs-list">
        <li class="resp-tab-item"><span>Login</span></li>
        <li class="resp-tab-item"><span>Sign Up</span></li>
      </ul>
      <div class="clearfix" />
      <div class="resp-tabs-container">
        <div class="tab-1 resp-tab-content">
          <div class="swm-right-w3ls">
            <form action="#" method="post">
              <div class="main">
                <div class="icon-head-wthree">
                  <h2>Log-in Here</h2>
                </div>
                <div class="form-left-w3l">
                  <input type="email" name="email" placeholder="Email" required="">
                </div>
                <div class="form-right-w3ls">
                  <input type="password" name="password" placeholder="Password" required="">
                </div>
                <div class="btnn">
                  <button type="submit">Log-In</button><br>
                  <a href="#" class="for">Forgot password...?</a>
                </div>
              </div>
            </form>
          </div>
        </div>

        <!--  -->
        <div class="tab-1 resp-tab-content">
          <div class="swm-left-w3ls">
            <form action="#" method="post">
              <div class="main">
                <div class="icon-head-wthree">

                  <!-- Sign up -->
                  <h2>Sign Up Here</h2>
                </div>
                <div class="form-left-to-w3l">
                  <input type="text" name="name" placeholder="Name" required="">
                </div>
                <div class="form-left-w3l">
                  <input type="email" name="email" placeholder="Email" required="">
                </div>
                <div class="form-right-w3ls ">
                  <input type="password" name="password" placeholder="Password" required="">
                </div>
                <div class="btn">
                  <button type="submit">Sign Up</button><br>
                </div>
              </div>
            </form>
          </div>
        </div>
        <!--  -->
      </div>
    </div>
  </div>
</div>
<!--  -->
<div class="copy">
  <p>&copy;2018 {Bongolia Team} All Rights Reserved | Thanks To <a href="http://www.W3Layouts.com" target="_blank">W3Layouts</a></p>
</div>
<script>
window.demoDescription = "Create a subdivided grid colored with HSL color space. The pointer position updates the hue.";

Pts.quickStart( "#pt", "#fe3" );

//// Demo code starts (anonymous function wrapper is optional) ---

(function() {
  
  // to interpolate color
  var t = 0;
  
  // hsl max value range (360,1,1,1)
  let cu = Color.hsl( Color.maxValues("hsl") );
  
  // recursively subdivide a rectangle
  function subdivide( color, rect, depth, index, center ) {
    if (depth > 5) return;
    let qs = Rectangle.quadrants( rect, center );
    qs.map( (r) => r[1].ceil() ); // fix the floating-point stroke problem
    
    form.fill( color( rect.interpolate( t ) ) ).rects( qs );
    
    if (index < 0) {
      for (let i=0, len=qs.length; i<len; i++) {
        subdivide(color, qs[i], depth+1, i );
      }
    } else {
      let i = Num.boundValue( index+2, 0, 4 );
      subdivide(color, qs[i], depth+1, index );
    }
  }
  
  
  space.add( (time, ftime) => {
    
    t = Num.cycle( time%3000/3000 );
    
    // get HSL color string, given a point position
    let color = (p) => {
      let p1 = p.$divide(space.size);
      let p2 = space.pointer.$divide(space.size);
      let c = cu.$multiply( Pt.make( 4, 1 ).to( p2.x, p2.y/3 + p1.x/3, p1.y ) );
      return Color.HSLtoRGB( c ).toString("rgb");
    }
    
    form.stroke(false);
    subdivide( color, space.innerBound, 0, -1, space.pointer );
    
  });
  
  //// ----
  
  
  space.bindMouse().bindTouch().play();
  
})();
</script>

